{"ast":null,"code":"var _jsxFileName = \"D:\\\\farmer-marketplace\\\\client\\\\src\\\\components\\\\CartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    // Retrieve cart from localStorage when component mounts\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(cart);\n\n    // Debugging: Check cart items when page loads\n    console.log('Cart items retrieved from localStorage:', cart);\n  }, []);\n\n  // Calculate total price of all items\n  const total = cartItems.reduce((acc, item) => acc + parseFloat(item.price) * item.quantity, 0);\n  const removeItemFromCart = id => {\n    // Remove the item with the matching ID from the cart\n    let updatedCart = cartItems.filter(item => item.id !== id);\n    setCartItems(updatedCart);\n    // Save updated cart to localStorage\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n  const updateQuantity = (id, quantity) => {\n    // Update the quantity of the item in the cart\n    let updatedCart = cartItems.map(item => item.id === id ? {\n      ...item,\n      quantity: quantity\n    } : item);\n    setCartItems(updatedCart);\n    // Save updated cart to localStorage\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), cartItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name,\n          className: \"cart-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              value: item.quantity,\n              onChange: e => updateQuantity(item.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Subtotal: $\", (item.price * item.quantity).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeItemFromCart(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total: $\", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checkout-button\",\n        children: \"Proceed to Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CartPage","_s","cartItems","setCartItems","cart","JSON","parse","localStorage","getItem","console","log","total","reduce","acc","item","parseFloat","price","quantity","removeItemFromCart","id","updatedCart","filter","setItem","stringify","updateQuantity","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","image","alt","name","type","min","value","onChange","e","target","toFixed","onClick","_c","$RefreshReg$"],"sources":["D:/farmer-marketplace/client/src/components/CartPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CartPage = () => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Retrieve cart from localStorage when component mounts\r\n        const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n        setCartItems(cart);\r\n\r\n        // Debugging: Check cart items when page loads\r\n        console.log('Cart items retrieved from localStorage:', cart);\r\n    }, []);\r\n\r\n    // Calculate total price of all items\r\n    const total = cartItems.reduce((acc, item) => acc + parseFloat(item.price) * item.quantity, 0);\r\n\r\n    const removeItemFromCart = (id) => {\r\n        // Remove the item with the matching ID from the cart\r\n        let updatedCart = cartItems.filter(item => item.id !== id);\r\n        setCartItems(updatedCart);\r\n        // Save updated cart to localStorage\r\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    };\r\n\r\n    const updateQuantity = (id, quantity) => {\r\n        // Update the quantity of the item in the cart\r\n        let updatedCart = cartItems.map(item => \r\n            item.id === id ? { ...item, quantity: quantity } : item\r\n        );\r\n        setCartItems(updatedCart);\r\n        // Save updated cart to localStorage\r\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-page\">\r\n            <h2>Your Cart</h2>\r\n            {cartItems.length > 0 ? (\r\n                <div>\r\n                    {cartItems.map((item) => (\r\n                        <div key={item.id} className=\"cart-item\">\r\n                            <img src={item.image} alt={item.name} className=\"cart-item-image\" />\r\n                            <div className=\"cart-item-details\">\r\n                                <p>{item.name}</p>\r\n                                <p>Price: ${item.price}</p>\r\n                                <p>\r\n                                    Quantity: \r\n                                    <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        value={item.quantity}\r\n                                        onChange={(e) => updateQuantity(item.id, e.target.value)}\r\n                                    />\r\n                                </p>\r\n                                <p>Subtotal: ${(item.price * item.quantity).toFixed(2)}</p>\r\n                                <button onClick={() => removeItemFromCart(item.id)}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <h3>Total: ${total.toFixed(2)}</h3>\r\n                    <button className=\"checkout-button\">Proceed to Checkout</button>\r\n                </div>\r\n            ) : (\r\n                <p>Your cart is empty</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}