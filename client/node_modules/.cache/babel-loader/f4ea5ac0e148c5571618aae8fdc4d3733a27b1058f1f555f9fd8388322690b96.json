{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\Farmer Marketplace - AgriMarket\\\\farmer-marketplace\\\\client\\\\src\\\\components\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import '../styles/ProductList.css';\n\n// const ProductList = () => {\n//     const [products, setProducts] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:5000/api/products')\n//             .then((response) => response.json())\n//             .then((data) => setProducts(data));\n//     }, []);\n\n//     return (\n//         <div className=\"product-list\">\n//             {products.map((product) => (\n//                 <div key={product._id} className=\"product-card\">\n//                     <img\n//                         src={product.image}\n//                         alt={product.name}\n//                         className=\"product-image\"\n//                     />\n//                     <h3>{product.name}</h3>\n//                     <p>Price: ${product.price}</p>\n//                     <p>{product.description}</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default ProductList;\n\nimport React, { useEffect, useState } from 'react';\nimport '../styles/ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/products').then(response => response.json()).then(data => setProducts(data));\n  }, []);\n\n  // Function to add product to cart\n  const addToCart = product => {\n    // Get cart from localStorage or initialize with an empty array\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if product is already in the cart\n    const existingProduct = cart.find(item => item._id === product._id);\n    if (existingProduct) {\n      // If the product already exists, increase the quantity\n      existingProduct.quantity += 1;\n    } else {\n      // Otherwise, add a new product with quantity 1\n      cart.push({\n        ...product,\n        quantity: 1\n      });\n    }\n\n    // Save the updated cart back to localStorage\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // Alert user about the addition\n    alert(`${product.name} added to cart`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image,\n        alt: product.name,\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addToCart(product),\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetch","then","response","json","data","addToCart","product","cart","JSON","parse","localStorage","getItem","existingProduct","find","item","_id","quantity","push","setItem","stringify","alert","name","className","children","map","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","price","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shind/OneDrive/Desktop/Farmer Marketplace - AgriMarket/farmer-marketplace/client/src/components/ProductList.jsx"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import '../styles/ProductList.css';\r\n\r\n// const ProductList = () => {\r\n//     const [products, setProducts] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         fetch('http://localhost:5000/api/products')\r\n//             .then((response) => response.json())\r\n//             .then((data) => setProducts(data));\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className=\"product-list\">\r\n//             {products.map((product) => (\r\n//                 <div key={product._id} className=\"product-card\">\r\n//                     <img\r\n//                         src={product.image}\r\n//                         alt={product.name}\r\n//                         className=\"product-image\"\r\n//                     />\r\n//                     <h3>{product.name}</h3>\r\n//                     <p>Price: ${product.price}</p>\r\n//                     <p>{product.description}</p>\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ProductList;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../styles/ProductList.css';\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/products')\r\n            .then((response) => response.json())\r\n            .then((data) => setProducts(data));\r\n    }, []);\r\n\r\n    // Function to add product to cart\r\n    const addToCart = (product) => {\r\n        // Get cart from localStorage or initialize with an empty array\r\n        let cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n        // Check if product is already in the cart\r\n        const existingProduct = cart.find((item) => item._id === product._id);\r\n\r\n        if (existingProduct) {\r\n            // If the product already exists, increase the quantity\r\n            existingProduct.quantity += 1;\r\n        } else {\r\n            // Otherwise, add a new product with quantity 1\r\n            cart.push({ ...product, quantity: 1 });\r\n        }\r\n\r\n        // Save the updated cart back to localStorage\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n        // Alert user about the addition\r\n        alert(`${product.name} added to cart`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-list\">\r\n            {products.map((product) => (\r\n                <div key={product._id} className=\"product-card\">\r\n                    <img\r\n                        src={product.image}\r\n                        alt={product.name}\r\n                        className=\"product-image\"\r\n                    />\r\n                    <h3>{product.name}</h3>\r\n                    <p>Price: ${product.price}</p>\r\n                    <p>{product.description}</p>\r\n                    <button onClick={() => addToCart(product)}>Add to Cart</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}