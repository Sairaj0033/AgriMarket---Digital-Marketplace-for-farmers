{"ast":null,"code":"var _jsxFileName = \"D:\\\\farmer-marketplace\\\\client\\\\src\\\\App.jsx\";\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './Pages/Login';\n// import Register from './Pages/Register';\n// import Home from './Pages/Home';\n// import FarmerDashboard from './Pages/FarmerDashbaord';\n// import Navbar from './components/Navbar';\n\n// const App = () => {\n//     const token = localStorage.getItem('token');  // Get token from localStorage to check if user is authenticated\n\n//     return (\n//         <Router>\n//             <Navbar />\n//             <Routes>\n//                 {/* Public Routes */}\n//                 <Route\n//                     path=\"/login\"\n//                     element={token ? <Login /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\n//                 />\n//                 <Route\n//                     path=\"/register\"\n//                     element={!token ? <Register /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\n//                 />\n\n//                 {/* Private Routes */}\n//                 <Route\n//                     path=\"/home\"\n//                     element={token ? <Home /> : <Navigate to=\"/login\" />} // Redirect to login if not authenticated\n//                 />\n//                 <Route\n//                     path=\"/farmer-dashboard\"\n//                     element={token && JSON.parse(localStorage.getItem('user'))?.isFarmer ? <FarmerDashboard /> : <Navigate to=\"/login\" />} // Farmer dashboard only for farmers\n//                 />\n\n//                 {/* Default Route */}\n//                 <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//             </Routes>\n//         </Router>\n//     );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\nimport Home from './Pages/Home';\nimport FarmerDashboard from './Pages/FarmerDashbaord';\nimport CartPage from './Pages/'; // Import the CartPage component\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  var _JSON$parse;\n  const token = localStorage.getItem('token'); // Get token from localStorage to check if user is authenticated\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: token ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 64\n        }, this) // Redirect to Home if already logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: !token ? /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 54\n        }, this) // Redirect to Home if already logged in\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: token ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 49\n        }, this) // Redirect to login if not authenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/farmer-dashboard\",\n        element: token && (_JSON$parse = JSON.parse(localStorage.getItem('user'))) !== null && _JSON$parse !== void 0 && _JSON$parse.isFarmer ? /*#__PURE__*/_jsxDEV(FarmerDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 92\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 114\n        }, this) // Farmer dashboard only for farmers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cart\",\n        element: token ? /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 53\n        }, this) // Cart page for authenticated users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","Login","Register","Home","FarmerDashboard","CartPage","Navbar","jsxDEV","_jsxDEV","App","_JSON$parse","token","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","JSON","parse","isFarmer","_c","$RefreshReg$"],"sources":["D:/farmer-marketplace/client/src/App.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n// import Login from './Pages/Login';\r\n// import Register from './Pages/Register';\r\n// import Home from './Pages/Home';\r\n// import FarmerDashboard from './Pages/FarmerDashbaord';\r\n// import Navbar from './components/Navbar';\r\n\r\n// const App = () => {\r\n//     const token = localStorage.getItem('token');  // Get token from localStorage to check if user is authenticated\r\n\r\n//     return (\r\n//         <Router>\r\n//             <Navbar />\r\n//             <Routes>\r\n//                 {/* Public Routes */}\r\n//                 <Route\r\n//                     path=\"/login\"\r\n//                     element={token ? <Login /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\r\n//                 />\r\n//                 <Route\r\n//                     path=\"/register\"\r\n//                     element={!token ? <Register /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\r\n//                 />\r\n\r\n//                 {/* Private Routes */}\r\n//                 <Route\r\n//                     path=\"/home\"\r\n//                     element={token ? <Home /> : <Navigate to=\"/login\" />} // Redirect to login if not authenticated\r\n//                 />\r\n//                 <Route\r\n//                     path=\"/farmer-dashboard\"\r\n//                     element={token && JSON.parse(localStorage.getItem('user'))?.isFarmer ? <FarmerDashboard /> : <Navigate to=\"/login\" />} // Farmer dashboard only for farmers\r\n//                 />\r\n\r\n//                 {/* Default Route */}\r\n//                 <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n//             </Routes>\r\n//         </Router>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './Pages/Login';\r\nimport Register from './Pages/Register';\r\nimport Home from './Pages/Home';\r\nimport FarmerDashboard from './Pages/FarmerDashbaord';\r\nimport CartPage from './Pages/'; // Import the CartPage component\r\nimport Navbar from './components/Navbar';\r\n\r\nconst App = () => {\r\n    const token = localStorage.getItem('token');  // Get token from localStorage to check if user is authenticated\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Routes>\r\n                {/* Public Routes */}\r\n                <Route\r\n                    path=\"/login\"\r\n                    element={token ? <Navigate to=\"/home\" /> : <Login />} // Redirect to Home if already logged in\r\n                />\r\n                <Route\r\n                    path=\"/register\"\r\n                    element={!token ? <Register /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\r\n                />\r\n\r\n                {/* Private Routes */}\r\n                <Route\r\n                    path=\"/home\"\r\n                    element={token ? <Home /> : <Navigate to=\"/login\" />} // Redirect to login if not authenticated\r\n                />\r\n                <Route\r\n                    path=\"/farmer-dashboard\"\r\n                    element={token && JSON.parse(localStorage.getItem('user'))?.isFarmer ? <FarmerDashboard /> : <Navigate to=\"/login\" />} // Farmer dashboard only for farmers\r\n                />\r\n                <Route\r\n                    path=\"/cart\"\r\n                    element={token ? <CartPage /> : <Navigate to=\"/login\" />} // Cart page for authenticated users\r\n                />\r\n\r\n                {/* Default Route */}\r\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}