{"ast":null,"code":"// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './Pages/Login';\n// import Register from './Pages/Register';\n// import Home from './Pages/Home';\n// import FarmerDashboard from './Pages/FarmerDashbaord';\n// import Navbar from './components/Navbar';\n\n// const App = () => {\n//     const token = localStorage.getItem('token');  // Get token from localStorage to check if user is authenticated\n\n//     return (\n//         <Router>\n//             <Navbar />\n//             <Routes>\n//                 {/* Public Routes */}\n//                 <Route\n//                     path=\"/login\"\n//                     element={token ? <Login /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\n//                 />\n//                 <Route\n//                     path=\"/register\"\n//                     element={!token ? <Register /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\n//                 />\n\n//                 {/* Private Routes */}\n//                 <Route\n//                     path=\"/home\"\n//                     element={token ? <Home /> : <Navigate to=\"/login\" />} // Redirect to login if not authenticated\n//                 />\n//                 <Route\n//                     path=\"/farmer-dashboard\"\n//                     element={token && JSON.parse(localStorage.getItem('user'))?.isFarmer ? <FarmerDashboard /> : <Navigate to=\"/login\" />} // Farmer dashboard only for farmers\n//                 />\n\n//                 {/* Default Route */}\n//                 <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//             </Routes>\n//         </Router>\n//     );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/farmer-marketplace/client/src/App.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n// import Login from './Pages/Login';\r\n// import Register from './Pages/Register';\r\n// import Home from './Pages/Home';\r\n// import FarmerDashboard from './Pages/FarmerDashbaord';\r\n// import Navbar from './components/Navbar';\r\n\r\n// const App = () => {\r\n//     const token = localStorage.getItem('token');  // Get token from localStorage to check if user is authenticated\r\n\r\n//     return (\r\n//         <Router>\r\n//             <Navbar />\r\n//             <Routes>\r\n//                 {/* Public Routes */}\r\n//                 <Route\r\n//                     path=\"/login\"\r\n//                     element={token ? <Login /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\r\n//                 />\r\n//                 <Route\r\n//                     path=\"/register\"\r\n//                     element={!token ? <Register /> : <Navigate to=\"/home\" />} // Redirect to Home if already logged in\r\n//                 />\r\n\r\n//                 {/* Private Routes */}\r\n//                 <Route\r\n//                     path=\"/home\"\r\n//                     element={token ? <Home /> : <Navigate to=\"/login\" />} // Redirect to login if not authenticated\r\n//                 />\r\n//                 <Route\r\n//                     path=\"/farmer-dashboard\"\r\n//                     element={token && JSON.parse(localStorage.getItem('user'))?.isFarmer ? <FarmerDashboard /> : <Navigate to=\"/login\" />} // Farmer dashboard only for farmers\r\n//                 />\r\n\r\n//                 {/* Default Route */}\r\n//                 <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n//             </Routes>\r\n//         </Router>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}