{"ast":null,"code":"var _jsxFileName = \"D:\\\\farmer-marketplace\\\\client\\\\src\\\\Pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Login.css\";\n\n// function Login() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"/api/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         if (data.role === \"farmer\") {\n//           navigate(\"/farmer-dashboard\");\n//         } else {\n//           navigate(\"/home\");\n//         }\n//       } else {\n//         setError(data.message || \"Login failed. Please try again.\");\n//       }\n//     } catch (error) {\n//       setError(\"Something went wrong. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h1>Login</h1>\n//       {error && <p className=\"error\">{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <p>\n//         Don't have an account? <a href=\"/register\">Register here</a>.\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/Login.css';\n\n// const Login = () => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch('http://localhost:5000/api/auth/login', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ email, password }),\n//             });\n//             const data = await response.json();\n//             if (response.ok) {\n//                 localStorage.setItem('token', data.token);\n//                 alert('Login successful!');\n//                 navigate('/dashboard');\n//             } else {\n//                 alert(`Error: ${data.message}`);\n//             }\n//         } catch (error) {\n//             console.error('Error during login:', error);\n//             alert('Login failed. Please try again.');\n//         }\n//     };\n\n//     return (\n//         <form className=\"auth-form\" onSubmit={handleSubmit}>\n//             <h2>Login</h2>\n//             <input\n//                 type=\"email\"\n//                 placeholder=\"Email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"password\"\n//                 placeholder=\"Password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//             />\n//             <button type=\"submit\">Login</button>\n//         </form>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous error messages\n\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Save token to localStorage\n        localStorage.setItem('token', data.token);\n\n        // Navigate based on the user role\n        if (data.user.isFarmer) {\n          navigate('/farmer-dashboard'); // Farmer-specific dashboard\n        } else {\n          navigate('/home'); // General home page\n        }\n      } else {\n        setError(data.message || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setError('Something went wrong. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 40\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","user","isFarmer","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["D:/farmer-marketplace/client/src/Pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Login.css\";\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"/api/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         if (data.role === \"farmer\") {\r\n//           navigate(\"/farmer-dashboard\");\r\n//         } else {\r\n//           navigate(\"/home\");\r\n//         }\r\n//       } else {\r\n//         setError(data.message || \"Login failed. Please try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setError(\"Something went wrong. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h1>Login</h1>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//       <form onSubmit={handleLogin}>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       <p>\r\n//         Don't have an account? <a href=\"/register\">Register here</a>.\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/Login.css';\r\n\r\n// const Login = () => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await fetch('http://localhost:5000/api/auth/login', {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({ email, password }),\r\n//             });\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 localStorage.setItem('token', data.token);\r\n//                 alert('Login successful!');\r\n//                 navigate('/dashboard');\r\n//             } else {\r\n//                 alert(`Error: ${data.message}`);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error during login:', error);\r\n//             alert('Login failed. Please try again.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n//             <h2>Login</h2>\r\n//             <input\r\n//                 type=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <button type=\"submit\">Login</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous error messages\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/auth/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                // Save token to localStorage\r\n                localStorage.setItem('token', data.token);\r\n\r\n                // Navigate based on the user role\r\n                if (data.user.isFarmer) {\r\n                    navigate('/farmer-dashboard'); // Farmer-specific dashboard\r\n                } else {\r\n                    navigate('/home'); // General home page\r\n                }\r\n            } else {\r\n                setError(data.message || 'Login failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            setError('Something went wrong. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>Login</h1>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <p>\r\n                Don't have an account? <a href=\"/register\">Register here</a>.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}