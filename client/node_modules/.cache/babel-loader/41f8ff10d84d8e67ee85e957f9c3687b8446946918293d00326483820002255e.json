{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\Farmer Marketplace - AgriMarket\\\\farmer-marketplace\\\\client\\\\src\\\\components\\\\Addproduct.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/AddProduct.css';\n\n// const AddProduct = () => {\n//     const [name, setName] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [description, setDescription] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const response = await fetch('api/products', {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ name, price, description }),\n//         });\n//         if (response.ok) {\n//             alert('Product added successfully');\n//         }\n//     };\n\n//     return (\n//         <form className=\"add-product-form\" onSubmit={handleSubmit}>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Product Name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Price\"\n//                 value={price}\n//                 onChange={(e) => setPrice(e.target.value)}\n//                 required\n//             />\n//             <textarea\n//                 placeholder=\"Description\"\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//             />\n//             <button type=\"submit\">Add Product</button>\n//         </form>\n//     );\n// };\n\n// export default AddProduct;\n\n// import React, { useState } from 'react';\n// import '../styles/AddProduct.css';\n\n// const AddProduct = () => {\n//     const [name, setName] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [description, setDescription] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch('http://localhost:5000/api/products', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ name, price, description }),\n//             });\n\n//             if (response.ok) {\n//                 alert('Product added successfully');\n//                 setName('');\n//                 setPrice('');\n//                 setDescription('');\n//             } else {\n//                 const errorData = await response.json();\n//                 alert(`Error: ${errorData.message || 'Failed to add product'}`);\n//             }\n//         } catch (error) {\n//             console.error('Error while adding product:', error);\n//             alert('An error occurred. Please try again later.');\n//         }\n//     };\n\n//     return (\n//         <form className=\"add-product-form\" onSubmit={handleSubmit}>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Product Name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Price\"\n//                 value={price}\n//                 onChange={(e) => setPrice(e.target.value)}\n//                 required\n//             />\n//             <textarea\n//                 placeholder=\"Description\"\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//             />\n//             <button type=\"submit\">Add Product</button>\n//         </form>\n//     );\n// };\n\n// export default AddProduct;\n\nimport React, { useState } from 'react';\nimport '../styles/AddProduct.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProduct = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImage(reader.result); // Store base64 string\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          price,\n          description,\n          image\n        })\n      });\n      if (response.ok) {\n        alert('Product added successfully');\n        setName('');\n        setPrice('');\n        setDescription('');\n        setImage(null);\n      } else {\n        const errorData = await response.json();\n        alert(`Error: ${errorData.message || 'Failed to add product'}`);\n      }\n    } catch (error) {\n      console.error('Error while adding product:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-product-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Price\",\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(AddProduct, \"hjVowL9XquxmdEFQah1BSyEY+9g=\");\n_c = AddProduct;\nexport default AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddProduct","_s","name","setName","price","setPrice","description","setDescription","image","setImage","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","message","error","console","className","onSubmit","children","type","placeholder","value","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","_c","$RefreshReg$"],"sources":["C:/Users/shind/OneDrive/Desktop/Farmer Marketplace - AgriMarket/farmer-marketplace/client/src/components/Addproduct.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/AddProduct.css';\r\n\r\n// const AddProduct = () => {\r\n//     const [name, setName] = useState('');\r\n//     const [price, setPrice] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const response = await fetch('api/products', {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ name, price, description }),\r\n//         });\r\n//         if (response.ok) {\r\n//             alert('Product added successfully');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form className=\"add-product-form\" onSubmit={handleSubmit}>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Product Name\"\r\n//                 value={name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Price\"\r\n//                 value={price}\r\n//                 onChange={(e) => setPrice(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <textarea\r\n//                 placeholder=\"Description\"\r\n//                 value={description}\r\n//                 onChange={(e) => setDescription(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\">Add Product</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default AddProduct;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../styles/AddProduct.css';\r\n\r\n// const AddProduct = () => {\r\n//     const [name, setName] = useState('');\r\n//     const [price, setPrice] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await fetch('http://localhost:5000/api/products', {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({ name, price, description }),\r\n//             });\r\n\r\n//             if (response.ok) {\r\n//                 alert('Product added successfully');\r\n//                 setName('');\r\n//                 setPrice('');\r\n//                 setDescription('');\r\n//             } else {\r\n//                 const errorData = await response.json();\r\n//                 alert(`Error: ${errorData.message || 'Failed to add product'}`);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error while adding product:', error);\r\n//             alert('An error occurred. Please try again later.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form className=\"add-product-form\" onSubmit={handleSubmit}>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Product Name\"\r\n//                 value={name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Price\"\r\n//                 value={price}\r\n//                 onChange={(e) => setPrice(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <textarea\r\n//                 placeholder=\"Description\"\r\n//                 value={description}\r\n//                 onChange={(e) => setDescription(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\">Add Product</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default AddProduct;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../styles/AddProduct.css';\r\n\r\nconst AddProduct = () => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState(null);\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setImage(reader.result); // Store base64 string\r\n        };\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/products', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ name, price, description, image }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Product added successfully');\r\n                setName('');\r\n                setPrice('');\r\n                setDescription('');\r\n                setImage(null);\r\n            } else {\r\n                const errorData = await response.json();\r\n                alert(`Error: ${errorData.message || 'Failed to add product'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error while adding product:', error);\r\n            alert('An error occurred. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"add-product-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n            />\r\n            <textarea\r\n                placeholder=\"Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageChange}\r\n                required\r\n            />\r\n            <button type=\"submit\">Add Product</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}